// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/load/measuredData": {
            "post": {
                "description": "Принимает данные оценки, парсит, создает запись в БД\nВ случае успеха возвращает словарь с ключем \"status\" и значением \"ok\"\nВ случае ошибки возвращает словарь с ключем \"error\" и строкой ошибки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Load"
                ],
                "summary": "Рут загрузки данных измерения коровы",
                "parameters": [
                    {
                        "description": "Данные измерения коровы",
                        "name": "measures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/load.MeasuresInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/confirmMail": {
            "post": {
                "description": "Подтверждение почты пользователя. После подтверждения пользователь становится зарегистрированным\nВ случае успеха возвращает словарь с ключем \"status\" и значением \"ok\"\nВ случае ошибки возвращает словарь с ключем \"error\" и строкой ошибки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Данные для подтверждения",
                        "name": "confirmationData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ConfirmMailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Рут логина\nВ случае успеха возвращает словарь с ключем \"access\" и значением access токена и ключем \"refresh\" и значение refresh токена\nВ случае ошибки возвращает словарь с ключем \"error\" и строкой ошибки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Почта и пароль",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/refresh": {
            "post": {
                "description": "Рут обновления access токена\nВ случае успеха возвращает словарь с ключем \"access\" и значением access токена и ключем \"refresh\" и значение refresh токена (переданное)\nВ случае ошибки возвращает словарь с ключем \"error\" и строкой ошибки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "refresh токен",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрация пользователя\nВ случае успеха возвращает словарь с ключем \"userData\" и значением зашифрованных данных пользователя, которые нужно будет передать в confirmMail\nВ случае ошибки возвращает словарь с ключем \"error\" и строкой ошибки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Данные регистрации пользователя",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "load.MeasuresInput": {
            "type": "object",
            "properties": {
                "cow": {
                    "description": "Загружаемая корова",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Cow"
                        }
                    ]
                },
                "measures": {
                    "description": "Замеры коровы",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Measures"
                        }
                    ]
                },
                "ratings": {
                    "description": "Оценки коровы",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Exterior"
                        }
                    ]
                }
            }
        },
        "models.Cow": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "description": "Дата рождения ГГГГ-ММ-ЧЧ",
                    "type": "string",
                    "example": "2001-03-23"
                },
                "bloody": {
                    "description": "Кровность",
                    "type": "number",
                    "example": 1
                },
                "breedName": {
                    "description": "Название породы",
                    "type": "string",
                    "example": "Порода"
                },
                "inventoryNumber": {
                    "description": "Инвентарный номер коровы",
                    "type": "string",
                    "example": "1213321"
                },
                "name": {
                    "description": "Кличка коровы",
                    "type": "string",
                    "example": "Дима"
                },
                "rshnnumber": {
                    "description": "РСХН номер коровы",
                    "type": "string",
                    "example": "1323323232"
                },
                "selecsNumber": {
                    "description": "Селекс номер коровы",
                    "type": "integer",
                    "example": 98989
                }
            }
        },
        "models.Exterior": {
            "type": "object",
            "properties": {
                "backBoneQuality": {
                    "description": "качество костяка (9 баллов)",
                    "type": "number"
                },
                "backNippleDiameter": {
                    "description": "Диаметр задних сосков (9 баллов)",
                    "type": "number"
                },
                "backNippleLocationBackView": {
                    "description": "Расположение задних сосков вид сзади (9 баллов)",
                    "type": "number"
                },
                "backUdderSegmentsLocationHeight": {
                    "description": "Высота прикрепления задних долей вымени (9 баллов)",
                    "type": "number"
                },
                "backUdderSegmentsWidth": {
                    "description": "Ширина задних долей вымени (9 баллов)",
                    "type": "number"
                },
                "body": {
                    "description": "Туловище (100 баллов)",
                    "type": "number"
                },
                "bodyDepth": {
                    "description": "Глубина туловища (9 баллов)",
                    "type": "number"
                },
                "bodyType": {
                    "description": "Тип телосложения (9 баллов)",
                    "type": "number"
                },
                "centralLigamentDepth": {
                    "description": "Глубина центральной связки (9 баллов)",
                    "type": "number"
                },
                "chestWidth": {
                    "description": "Ширина груди (9 баллов)",
                    "type": "number"
                },
                "deception": {
                    "description": "Обмускульность (9 баллов)",
                    "type": "number"
                },
                "fatness": {
                    "description": "Упитанность (9 баллов)",
                    "type": "number"
                },
                "foreheadHeight": {
                    "description": "Высота лба (9 баллов)",
                    "type": "number"
                },
                "foreheadWidth": {
                    "description": "Ширина лба (9 баллов)",
                    "type": "number"
                },
                "forelegWalk": {
                    "description": "Поступь передних ног (9 баллов)",
                    "type": "number"
                },
                "frontNippleDiameter": {
                    "description": "Диаметр передних сосков (9 балов)",
                    "type": "number"
                },
                "frontNippleLength": {
                    "description": "Длинна передних сосков (9 баллов)",
                    "type": "number"
                },
                "frontNippleLocationBackView": {
                    "description": "Расположение передних сосков вид сзади (9 баллов)",
                    "type": "number"
                },
                "frontUdderSegmentsLocation": {
                    "description": "Прикрепление передних долей вымени (9 баллов)",
                    "type": "number"
                },
                "harmonyOfMovement": {
                    "description": "Гармоничность движения (9 баллов)",
                    "type": "number"
                },
                "hindLegWalkBackView": {
                    "description": "Поступь задних ног cзади (9 баллов)",
                    "type": "number"
                },
                "hindLegWalkSideView": {
                    "description": "Поступь задних ног сбоку (9 баллов)",
                    "type": "number"
                },
                "hoofAngle": {
                    "description": "Угол копыта (9 баллов)",
                    "type": "number"
                },
                "limbs": {
                    "description": "Конечности (100 баллов)",
                    "type": "number"
                },
                "milkType": {
                    "description": "Молочный тип (100 баллов)",
                    "type": "number"
                },
                "rating": {
                    "description": "Суммарный рейтинг (100 баллов)",
                    "type": "number"
                },
                "ribsAngle": {
                    "description": "Угол наклона ребер (9 баллов)",
                    "type": "number"
                },
                "sacrum": {
                    "description": "Крестец (100 баллов)",
                    "type": "number"
                },
                "sacrumAngle": {
                    "description": "Угол наклона крестца (9 баллов)",
                    "type": "number"
                },
                "sacrumHeight": {
                    "description": "высота в крестце (9 баллов)",
                    "type": "number"
                },
                "sacrumLength": {
                    "description": "Длина крестца (9 баллов)",
                    "type": "number"
                },
                "sacrumWidth": {
                    "description": "ширина в крестце (9 баллов)",
                    "type": "number"
                },
                "topLine": {
                    "description": "Линия верха (9 баллов)",
                    "type": "number"
                },
                "udder": {
                    "description": "Вымя (100 баллов)",
                    "type": "number"
                },
                "udderBalance": {
                    "description": "Баланс вымени (9 баллов)",
                    "type": "number"
                },
                "udderDepth": {
                    "description": "Глубина вымени (9 баллов)",
                    "type": "number"
                },
                "udderVeins": {
                    "description": "Выраженность вен вымени (9 баллов)",
                    "type": "number"
                }
            }
        },
        "models.Measures": {
            "type": "object",
            "properties": {
                "backNippleDiameter": {
                    "description": "Диаметр задних сосков (Сантиметры или градусы)",
                    "type": "number"
                },
                "backUdderSegmentsLocationHeight": {
                    "description": "Высота прикрепления задних долей вымени (Сантиметры или градусы)",
                    "type": "number"
                },
                "backUdderSegmentsWidth": {
                    "description": "Ширина задних долей вымени (Сантиметры или градусы)",
                    "type": "number"
                },
                "centralLigamentDepth": {
                    "description": "Глубина центральной связки (Сантиметры или градусы)",
                    "type": "number"
                },
                "chestWidth": {
                    "description": "Ширина груди (Сантиметры или градусы)",
                    "type": "number"
                },
                "foreheadHeight": {
                    "description": "Высота лба (Сантиметры)",
                    "type": "number"
                },
                "foreheadWidth": {
                    "description": "Ширина лба (Сантиметры)",
                    "type": "number"
                },
                "frontNippleDiameter": {
                    "description": "Диаметр передних сосков (Сантиметры или градусы)",
                    "type": "number"
                },
                "frontNippleLength": {
                    "description": "Длинна передних сосков (Сантиметры или градусы)",
                    "type": "number"
                },
                "frontUdderSegmentsLocation": {
                    "description": "Прикрепление передних долей вымени (Сантиметры или градусы)",
                    "type": "number"
                },
                "hindLegWalkSideView": {
                    "description": "Поступь задних ног сбоку (Сантиметры или градусы)",
                    "type": "number"
                },
                "hoofAngle": {
                    "description": "Угол копыта (Сантиметры или градусы)",
                    "type": "number"
                },
                "sacrumAngle": {
                    "description": "Угол наклона крестца (Сантиметры или градусы)",
                    "type": "number"
                },
                "sacrumHeight": {
                    "description": "высота в крестце (Сантиметры или градусы)",
                    "type": "number"
                },
                "sacrumWidth": {
                    "description": "ширина в крестце (Сантиметры или градусы)",
                    "type": "number"
                },
                "udderBalance": {
                    "description": "Баланс вымени (Сантиметры или градусы)",
                    "type": "number"
                },
                "udderDepth": {
                    "description": "Глубина вымени (Сантиметры или градусы)",
                    "type": "number"
                }
            }
        },
        "user.ConfirmMailRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Код с эл. почты пользователя",
                    "type": "string",
                    "example": "3295"
                },
                "userData": {
                    "description": "Зашифрованные данные пользователя из Register",
                    "type": "string",
                    "example": "12308mjkfa01jkfa_!@#"
                }
            }
        },
        "user.LoginData": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Почта пользователя",
                    "type": "string",
                    "example": "user@mail.ru"
                },
                "password": {
                    "description": "Пароль пользователя",
                    "type": "string",
                    "example": "samplePassword123"
                }
            }
        },
        "user.RefreshRequest": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "description": "refresh токен",
                    "type": "string",
                    "example": "queuefjad1908)fd_?1"
                }
            }
        },
        "user.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Почта",
                    "type": "string",
                    "example": "User321@gmail.com"
                },
                "nameSurnamePatronymic": {
                    "description": "Фио",
                    "type": "string",
                    "example": "Иванов Федор Петрович"
                },
                "password": {
                    "description": "Пароль",
                    "type": "string",
                    "example": "FedorsPassword15"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "77.221.145.143:8080",
	BasePath:         "/api/mobile",
	Schemes:          []string{},
	Title:            "GenMilk mobile API",
	Description:      "Сваггер сгенерирован из кода, поэтому может содержать неточности. По мере возможности они будут описаны далее\nВсе даты передаются как строки\nБольшая часть рутов не возвращает вложенные объекты\nАвторизация по JWT, стандартная",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
